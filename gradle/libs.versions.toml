[versions]
kotlinx-coroutines = "1.10.2"
kotlinx-atomicfu = "0.29.0"
kotlinx-serialization = "1.9.0"
kotlin = "2.2.20"

detekt-plugin = "1.23.8"
kover-plugin = "0.9.1"
ktlint-plugin = "12.3.0"
protobuf-plugin = "0.9.5"
testlogger-plugin = "4.0.0"

caffeine = "3.2.2"
ipaddress = "5.5.1"
jedis = "6.2.0"
junit-jupiter = "5.13.4"
kerby-asn1 = "2.1.0"
klaxon = "5.6"
kotlin-logging = "7.0.7"
ktor = "2.3.13"
logback-classic = "1.5.18"
mockk = "1.14.5"
multiformat = "1.1.0"
noise-java = "0.1.1"
protobuf = "4.32.1"
reflections = "0.10.2"
result-monad = "1.4.0"
rocksdb = "10.2.1"
shadow = "8.1.1"
slf4j-api = "2.0.17"

nexus-plugin = "2.0.0"
versions-plugin = "0.52.0"

[libraries]
# Libraries for the build system
buildscript-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu-gradle-plugin", version.ref = "kotlinx-atomicfu" }
buildscript-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt-plugin" }
buildscript-shadow = { module = "com.github.johnrengelman:shadow", version.ref = "shadow" }
buildscript-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
buildscript-kover = { module = "org.jetbrains.kotlinx.kover:org.jetbrains.kotlinx.kover.gradle.plugin", version.ref = "kover-plugin" }
buildscript-ktlint = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktlint-plugin" }
buildscript-protobuf = { module = "com.google.protobuf:protobuf-gradle-plugin", version.ref = "protobuf-plugin" }
buildscript-serialization = { module = "org.jetbrains.kotlin.plugin.serialization:org.jetbrains.kotlin.plugin.serialization.gradle.plugin", version.ref = "kotlin" }
buildscript-testlogger = { module = "com.adarshr:gradle-test-logger-plugin", version.ref = "testlogger-plugin" }

# Libraries for the application
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
io-mockk-mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
ipaddress = { module = "com.github.seancfoley:ipaddress", version.ref = "ipaddress" }
jedis = { module = "redis.clients:jedis", version.ref = "jedis" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit-jupiter" }
kerby-asn1 = { module = "org.apache.kerby:kerby-asn1", version.ref = "kerby-asn1" }
klaxon = { module = "com.beust:klaxon", version.ref = "klaxon" }
kotlin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-serialization-cbor = { module = "org.jetbrains.kotlinx:kotlinx-serialization-cbor", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "kotlinx-atomicfu" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-debug = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-debug", version.ref = "kotlinx-coroutines" }
kotlin-logging = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "kotlin-logging" }
ktor-network = { module = "io.ktor:ktor-network", version.ref = "ktor" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback-classic" }
multiformat = { module = "org.erwinkok.multiformat:multiformat", version.ref = "multiformat" }
noise-java = { module = "org.signal.forks:noise-java", version.ref = "noise-java" }
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }
reflections = { module = "org.reflections:reflections", version.ref = "reflections" }
result-monad = { module = "org.erwinkok.result:result-monad", version.ref = "result-monad" }
rocksdb = { module = "org.rocksdb:rocksdbjni", version.ref = "rocksdb" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j-api" }

[plugins]
atomicfu = { id = "kotlinx-atomicfu", version.ref = "kotlinx-atomicfu" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
build-nexus = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexus-plugin" }
build-shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
build-versions = { id = "com.github.ben-manes.versions", version.ref = "versions-plugin" }
